#!/usr/bin/env ruby
# -*- coding: utf-8 -*-
#
# Copyright (C) 2013-2014  Droonga Project
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

require "drnbench"
require "optparse"
require "shellwords"

config = Drnbench::PublishSubscribe::Configuration.new
option_parser = OptionParser.new do |parser|
  parser.version = Drnbench::VERSION

  parser.on("--start-n-subscribers=N", Integer,
            "initial number of subscribers") do |n_subscribers|
    config.start_n_subscribers = n_subscribers
  end
  parser.on("--n-publishings=N", Integer,
            "number of publish times") do |n_publishings|
    config.n_publishings = n_publishings
  end
  parser.on("--n-steps=N", Integer,
            "number of benchmark steps") do |n_steps|
    config.n_steps = n_steps
  end
  parser.on("--timeout=SECONDS", Float,
            "timeout for receiving") do |timeout|
    config.timeout = timeout
  end
  parser.on("--output-path=PATH", String,
            "path to the output CSV file") do |output_path|
    config.output_path = output_path
  end

  parser.on("--subscribe-request-file=PATH", String,
            "path to the file which defines a request to subscribe") do |path|
    config.subscribe_request_file = path
  end
  parser.on("--feed-file=PATH", String,
            "path to the file which defines a message feeded to the engine") do |path|
    config.feed_file = path
  end

  parser.on("--protocol-adapter-port=PORT", Integer,
            "port number for the Droonga Protocol Adapter which is used for clients") do |port|
    config.protocol_adapter.port = port
  end
  parser.on("--protocol-adapter-receive-port=PORT", Integer,
            "port number for the Droonga Protocol Adapter which is used for the engine") do |port|
    config.protocol_adapter.receive_port = port
  end
  parser.on("--protocol-adapter-application-dir=PATH", String,
            "path to the directory of the Droonga Protocol Adapter") do |path|
    config.protocol_adapter.application_dir = path
  end
  parser.on("--node=PATH", String,
            "path to the node.js executable") do |node|
    config.protocol_adapter.node = node
  end
  parser.on("--node-options=OPTIONS",
            "options for node.js",
            "you can specify this option multiple times") do |options|
    config.protocol_adapter.node_options = Shellwords.split(options)
  end

  parser.on("--engine-config-path=PATH", String,
            "path to the configuration directory for Droonga Engine") do |path|
    config.engine.engine_config_path = path
  end
  parser.on("--fluentd=PATH", String,
            "path to the fluentd executable") do |fluentd|
    config.engine.fluentd = fluentd
  end
  parser.on("--fluentd-options=OPTIONS",
            "options for fluentd",
            "you can specify this option multiple times") do |options|
    config.engine.fluentd_options = Shellwords.split(options)
  end
end
args = option_parser.parse!(ARGV)

config.validate

runner = Drnbench::PublishSubscribe::GradualRunner.new(config)
runner.run

File.open(config.output_path, "w") do |file|
  runner.total_results.each do |row|
    file.puts(CSV.generate_line(row))
    puts row.join(",")
  end
end
puts "Statistics has been saved to #{config.output_path}"
