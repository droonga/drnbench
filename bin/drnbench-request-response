#!/usr/bin/env ruby
# -*- coding: utf-8 -*-
#
# Copyright (C) 2013-2014  Droonga Project
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

require "drnbench"
require "optparse"

config = Drnbench::RequestResponse::Configuration.new
option_parser = OptionParser.new do |parser|
  parser.on("--duration=SECONDS", Float,
            "duration of the benmark") do |duration|
    config.duration = duration
  end
  parser.on("--wait=SECONDS", Float,
            "wait for each request") do |wait|
    config.wait = wait
  end
  parser.on("--start-n-clients=N", Integer,
            "initial number of clients (optional)") do |n_clients|
    config.start_n_clients = n_clients
  end
  parser.on("--end-n-clients=N", Integer,
            "final number of clients (optional)") do |n_clients|
    config.end_n_clients = n_clients
  end
  parser.on("--step=COUNT", Integer,
            "step to increase number of clients (optional)") do |step|
    config.step = step
  end
  parser.on("--n-slow-requests=N", Integer,
            "number of reporting slow requests (optional)") do |n_slow_requests|
    config.n_slow_requests = n_slow_requests
  end

  parser.on("--mode=MODE", String,
            "mode of benchmark (optional)",
            "available modes:",
            "  http",
            "  http-droonga-search") do |mode|
    config.mode = mode.gsub(/-/, "_")
  end
  parser.on("--request-patterns-file=PATH",
            "path to request patterns JSON file") do |path|
    config.request_patterns_file = File.expand_path(path)
  end

  parser.on("--default-host=HOST", String,
            "default host name (optional)") do |host|
    config.default_host = host
  end
  parser.on("--default-port=PORT", Integer,
            "default port number (optional)") do |port|
    config.default_port = port
  end
  parser.on("--default-path=PATH", String,
            "default path (optional)") do |path|
    config.default_path = path
  end
  parser.on("--default-method=METHOD", String,
            "default HTTP method (optional)") do |method|
    config.default_method = method
  end

  parser.on("--output-path=PATH",
            "path to output statistics as a CSV file (optional)") do |path|
    config.output_path = File.expand_path(path)
  end
end
args = option_parser.parse!(ARGV)

config.validate

runner = Drnbench::RequestResponse::GradualRunner.new(config)
runner.run

File.open(config.output_path, "w") do |file|
  file.puts runner.result.to_csv
end
puts "Statistics has been saved to #{config.output_path}"
