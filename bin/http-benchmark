#!/usr/bin/env ruby
# -*- coding: utf-8 -*-

require "droonga/http-benchmark"
require "optparse"
require "json"

options = {
  :start_n_clients => 1,
  :end_n_clients => 1,
  :step => 1,
  :report_progressively => true,
  :output_path => "/tmp/http-benchmark-result.csv",
}
option_parser = OptionParser.new do |parser|
  parser.on("--duration=SECONDS", Float,
            "duration of the benmark") do |duration|
    options[:duration] = duration
  end
  parser.on("--wait=SECONDS", Float,
            "wait for each request") do |wait|
    options[:wait] = wait
  end
  parser.on("--start-n-clients=N", Integer,
            "initial number of clients (optional)") do |n_clients|
    options[:start_n_clients] = n_clients
  end
  parser.on("--end-n-clients=N", Integer,
            "final number of clients (optional)") do |n_clients|
    options[:end_n_clients] = n_clients
  end
  parser.on("--step=COUNT", Integer,
            "step to increase number of clients (optional)") do |step|
    options[:step] = step
  end

  parser.on("--request-patterns-file=PATH",
            "path to request patterns JSON file") do |path|
    options[:request_patterns_file] = File.expand_path(path)
  end

  parser.on("--host=HOST", String,
            "default host name (optional)") do |host|
    options[:host] = host
  end
  parser.on("--port=PORT", Integer,
            "default port number (optional)") do |port|
    options[:port] = port
  end
  parser.on("--path=PATH", String,
            "default path (optional)") do |path|
    options[:path] = path
  end
  parser.on("--method=METHOD", String,
            "default HTTP method (optional)") do |method|
    options[:method] = method
  end

  parser.on("--output-path=PATH",
            "path to output statistics as a CSV file (optional)") do |path|
    options[:output_path] = File.expand_path(path)
  end
end
args = option_parser.parse!(ARGV)

if options[:duration].nil?
  raise "You must specify the test duration by --duration option."
end
if options[:request_patterns_file].nil?
  raise "You must specify the path to the request patterns JSON file " +
          "by --request-patterns-file option."
end

request_patterns = File.read(options[:request_patterns_file])
options[:request_patterns] = JSON.parse(request_patterns)

runner = Droonga::HttpBenchmark::GradualRunner.new(options)
runner.run

File.open(options[:output_path], "w") do |file|
  file.puts runner.result.to_csv
end
puts "Statistics has been saved to #{options[:output_path]}"
